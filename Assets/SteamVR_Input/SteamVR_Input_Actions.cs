//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_InteractUI;
        
        private static SteamVR_Action_Boolean p_default_Teleport;
        
        private static SteamVR_Action_Boolean p_default_GrabPinch;
        
        private static SteamVR_Action_Boolean p_default_GrabGrip;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_default_Squeeze;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnLeft;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnRight;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        private static SteamVR_Action_Boolean p_vizNavigation_Position;
        
        private static SteamVR_Action_Boolean p_vizNavigation_Rotation;
        
        private static SteamVR_Action_Boolean p_vizNavigation_Scale;
        
        private static SteamVR_Action_Single p_vizNavigation_HardGrip;
        
        private static SteamVR_Action_Boolean p_vizNavigation_Select;
        
        private static SteamVR_Action_Boolean p_menuInteraction_Select;
        
        private static SteamVR_Action_Boolean p_menuInteraction_MenuControl;
        
        private static SteamVR_Action_Vector2 p_menuInteraction_Scroll;
        
        private static SteamVR_Action_Boolean p_dimExplorer_Select;
        
        private static SteamVR_Action_Boolean p_dimExplorer_Scroll;
        
        private static SteamVR_Action_Boolean p_timeline_Select;
        
        private static SteamVR_Action_Boolean p_timeline_Scroll;
        
        private static SteamVR_Action_Boolean p_timeline_Back;
        
        private static SteamVR_Action_Boolean p_videoPlayer_Select;
        
        public static SteamVR_Action_Boolean default_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_default_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Teleport
        {
            get
            {
                return SteamVR_Actions.p_default_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_default_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_default_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_default_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Boolean vizNavigation_Position
        {
            get
            {
                return SteamVR_Actions.p_vizNavigation_Position.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vizNavigation_Rotation
        {
            get
            {
                return SteamVR_Actions.p_vizNavigation_Rotation.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vizNavigation_Scale
        {
            get
            {
                return SteamVR_Actions.p_vizNavigation_Scale.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single vizNavigation_HardGrip
        {
            get
            {
                return SteamVR_Actions.p_vizNavigation_HardGrip.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean vizNavigation_Select
        {
            get
            {
                return SteamVR_Actions.p_vizNavigation_Select.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean menuInteraction_Select
        {
            get
            {
                return SteamVR_Actions.p_menuInteraction_Select.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean menuInteraction_MenuControl
        {
            get
            {
                return SteamVR_Actions.p_menuInteraction_MenuControl.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 menuInteraction_Scroll
        {
            get
            {
                return SteamVR_Actions.p_menuInteraction_Scroll.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean dimExplorer_Select
        {
            get
            {
                return SteamVR_Actions.p_dimExplorer_Select.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean dimExplorer_Scroll
        {
            get
            {
                return SteamVR_Actions.p_dimExplorer_Scroll.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean timeline_Select
        {
            get
            {
                return SteamVR_Actions.p_timeline_Select.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean timeline_Scroll
        {
            get
            {
                return SteamVR_Actions.p_timeline_Scroll.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean timeline_Back
        {
            get
            {
                return SteamVR_Actions.p_timeline_Back.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean videoPlayer_Select
        {
            get
            {
                return SteamVR_Actions.p_videoPlayer_Select.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.vizNavigation_Position,
                    SteamVR_Actions.vizNavigation_Rotation,
                    SteamVR_Actions.vizNavigation_Scale,
                    SteamVR_Actions.vizNavigation_HardGrip,
                    SteamVR_Actions.vizNavigation_Select,
                    SteamVR_Actions.menuInteraction_Select,
                    SteamVR_Actions.menuInteraction_MenuControl,
                    SteamVR_Actions.menuInteraction_Scroll,
                    SteamVR_Actions.dimExplorer_Select,
                    SteamVR_Actions.dimExplorer_Scroll,
                    SteamVR_Actions.timeline_Select,
                    SteamVR_Actions.timeline_Scroll,
                    SteamVR_Actions.timeline_Back,
                    SteamVR_Actions.videoPlayer_Select};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.vizNavigation_Position,
                    SteamVR_Actions.vizNavigation_Rotation,
                    SteamVR_Actions.vizNavigation_Scale,
                    SteamVR_Actions.vizNavigation_HardGrip,
                    SteamVR_Actions.vizNavigation_Select,
                    SteamVR_Actions.menuInteraction_Select,
                    SteamVR_Actions.menuInteraction_MenuControl,
                    SteamVR_Actions.menuInteraction_Scroll,
                    SteamVR_Actions.dimExplorer_Select,
                    SteamVR_Actions.dimExplorer_Scroll,
                    SteamVR_Actions.timeline_Select,
                    SteamVR_Actions.timeline_Scroll,
                    SteamVR_Actions.timeline_Back,
                    SteamVR_Actions.videoPlayer_Select};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.vizNavigation_Position,
                    SteamVR_Actions.vizNavigation_Rotation,
                    SteamVR_Actions.vizNavigation_Scale,
                    SteamVR_Actions.vizNavigation_Select,
                    SteamVR_Actions.menuInteraction_Select,
                    SteamVR_Actions.menuInteraction_MenuControl,
                    SteamVR_Actions.dimExplorer_Select,
                    SteamVR_Actions.dimExplorer_Scroll,
                    SteamVR_Actions.timeline_Select,
                    SteamVR_Actions.timeline_Scroll,
                    SteamVR_Actions.timeline_Back,
                    SteamVR_Actions.videoPlayer_Select};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.vizNavigation_HardGrip};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.menuInteraction_Scroll};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.vizNavigation_Position,
                    SteamVR_Actions.vizNavigation_Rotation,
                    SteamVR_Actions.vizNavigation_Scale,
                    SteamVR_Actions.vizNavigation_HardGrip,
                    SteamVR_Actions.vizNavigation_Select,
                    SteamVR_Actions.menuInteraction_Select,
                    SteamVR_Actions.menuInteraction_MenuControl,
                    SteamVR_Actions.menuInteraction_Scroll,
                    SteamVR_Actions.dimExplorer_Select,
                    SteamVR_Actions.dimExplorer_Scroll,
                    SteamVR_Actions.timeline_Select,
                    SteamVR_Actions.timeline_Scroll,
                    SteamVR_Actions.timeline_Back,
                    SteamVR_Actions.videoPlayer_Select};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/InteractUI")));
            SteamVR_Actions.p_default_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Teleport")));
            SteamVR_Actions.p_default_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabPinch")));
            SteamVR_Actions.p_default_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_SnapTurnLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnLeft")));
            SteamVR_Actions.p_default_SnapTurnRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnRight")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            SteamVR_Actions.p_vizNavigation_Position = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VizNavigation/in/Position")));
            SteamVR_Actions.p_vizNavigation_Rotation = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VizNavigation/in/Rotation")));
            SteamVR_Actions.p_vizNavigation_Scale = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VizNavigation/in/Scale")));
            SteamVR_Actions.p_vizNavigation_HardGrip = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/VizNavigation/in/HardGrip")));
            SteamVR_Actions.p_vizNavigation_Select = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VizNavigation/in/Select")));
            SteamVR_Actions.p_menuInteraction_Select = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/MenuInteraction/in/Select")));
            SteamVR_Actions.p_menuInteraction_MenuControl = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/MenuInteraction/in/MenuControl")));
            SteamVR_Actions.p_menuInteraction_Scroll = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/MenuInteraction/in/Scroll")));
            SteamVR_Actions.p_dimExplorer_Select = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/DimExplorer/in/Select")));
            SteamVR_Actions.p_dimExplorer_Scroll = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/DimExplorer/in/Scroll")));
            SteamVR_Actions.p_timeline_Select = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Timeline/in/Select")));
            SteamVR_Actions.p_timeline_Scroll = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Timeline/in/Scroll")));
            SteamVR_Actions.p_timeline_Back = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Timeline/in/Back")));
            SteamVR_Actions.p_videoPlayer_Select = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VideoPlayer/in/Select")));
        }
    }
}
